<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.avane.xwiki.products</groupId>
    <artifactId>xwiki-product-chronopolys-parent</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>distribution-test</artifactId>
  <name>XWiki Products - Chronopolys - Functional Tests</name>
  <packaging>pom</packaging>
  <description>XWiki Products - Chronopolys - Functional Tests</description>
  <dependencies>
    <dependency>
      <groupId>com.xpn.xwiki.platform.tools</groupId>
      <artifactId>xwiki-shared-tests</artifactId>
      <version>${platform.tool.test.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <testSourceDirectory>src/test/it</testSourceDirectory>
    <pluginManagement>
      <plugins>
        <!--  Force compilation of tests as the packaging being pom tests won't be compiled
          with the default pom lifecycle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--  Force copy of test resources file as the packaging being pom resource files won't
          be copied with the default pom lifecycle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <!--phase>process-test-resources</phase-->
              <goals>
                <goal>testResources</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Create jar containing integration tests which will be installed -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Unpack the XWiki application -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>unzip-application</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>com.avane.xwiki.products</groupId>
                    <artifactId>xwiki-product-chronopolys-${xwiki.db}</artifactId>
                    <version>${pom.version}</version>
                    <type>zip</type>
                  </artifactItem>
                </artifactItems>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Start XWiki, Execute the tests and Stop XWiki.
          Note: To execute a single test case run mvn install -Dpattern=<test name>
          For example: mvn install -Dpattern=DeletePageTest
          For example: mvn install -Dpattern=.*Wysiwyg.*
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <executions>
            <execution>
              <phase>integration-test</phase>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/AllTests.java</include>
            </includes>
            <systemProperties>
              <property>
                <name>pattern</name>
                <value>${pattern}</value>
              </property>
              <property>
                <name>xwikiPort</name>
                <value>${port}</value>
              </property>
              <property>
                <name>xwikiExecutionDirectory</name>
                <value>${basedir}/target/xwiki-product-chronopolys-${xwiki.db}-${pom.version}</value>
              </property>
              <property>
                <name>xwikiExecutionStartCommand</name>
                <value>${xwikiExecutionStartCommand}</value>
              </property>
              <property>
                <name>xwikiExecutionStopCommand</name>
                <value>${xwikiExecutionStopCommand}</value>
              </property>
              <property>
                <name>debug</name>
                <value>${debug}</value>
              </property>
              <!-- TODO: Find way to have maven merge properties and move this to the selenium-tests module -->
              <property>
                <name>browser</name>
                <value>${browser}</value>
              </property>
            </systemProperties>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <properties>
    <!-- This is to allow users to override this property on the command line to choose what
      test to run. For example to run only the DeletePageTest you would type:
      mvn install -DPattern=DeletePageTest
    -->
    <pattern>.*</pattern>
    <port>8080</port>
  </properties>
  <profiles>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <xwikiExecutionStartCommand>sh -f start_xwiki.sh ${port}</xwikiExecutionStartCommand>
        <xwikiExecutionStopCommand>sh -f stop_xwiki.sh</xwikiExecutionStopCommand>
      </properties>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <xwikiExecutionStartCommand>sh -f start_xwiki.sh ${port}</xwikiExecutionStartCommand>
        <xwikiExecutionStopCommand>sh -f stop_xwiki.sh</xwikiExecutionStopCommand>
      </properties>
    </profile>
    <!-- This profile must come after the "mac" profile so that it overrides it when it's active.
         Note: You must define the ${profilePath} property in your settings.xml file or in a
         profiles.xml one. For example in settings.xml:
         
           <settings>
             <profiles>
               <profile>
                 <id>xwiki</id>
                 <properties>
                   <profilerPath>/Applications/YourKit Java Profiler 7.0.11.app/bin/mac</profilerPath>
                 </properties>
                 <repositories>
                   <repository>
             [...]
             <activeProfiles>
               <activeProfile>xwiki</activeProfile>
             [...]
    -->    
    <profile>
      <id>macprofiler</id>
      <properties>
        <xwikiExecutionStartCommand>sh -f start_xwiki_debug.sh ${port} profiler "${profilerPath}"</xwikiExecutionStartCommand>
        <xwikiExecutionStopCommand>sh -f stop_xwiki.sh</xwikiExecutionStopCommand>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <xwikiExecutionStartCommand>cmd /c start_xwiki.bat ${port}</xwikiExecutionStartCommand>
        <xwikiExecutionStopCommand>cmd /c stop_xwiki.bat</xwikiExecutionStopCommand>
      </properties>
    </profile>
    <!-- This profile must come after the "windows" profile so that it overrides it when it's active.
         Note: You must define the ${profilePath} property in your settings.xml file or in a
         profiles.xml one. No spaces are allowed in this path, 8.3 DOS path format should be used.
         Use the "dir /X" command (in command prompt) within a directory to get 8.3 DOS path.
         For example (win32) in settings.xml:
           <settings>
             <profiles>
               <profile>
                 <id>xwiki</id>
                 <properties>
                   <profilerPath>C:\PROGRA~1\YOURKI~1.11\bin\win32</profilerPath>                   
                 </properties>
                 <repositories>
                   <repository>
             [...]
             <activeProfiles>
               <activeProfile>xwiki</activeProfile>
             [...]
    -->    
    <profile>
      <id>winprofiler</id>
      <properties>
        <xwikiExecutionStartCommand>cmd /c start_xwiki_debug.bat ${port} profiler ${profilerPath}</xwikiExecutionStartCommand>
        <xwikiExecutionStopCommand>cmd /c stop_xwiki.bat</xwikiExecutionStopCommand>
      </properties>
    </profile>
  </profiles>
  <modules>
    <module>selenium-tests</module>    
  </modules>
</project>
