<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Utils</web>
<name>ImportExport</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.jvdrean</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1170345436000</creationDate>
<date>1186397081000</date>
<contentUpdateDate>1186397081000</contentUpdateDate>
<version>1.11</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<attachment>
<filename>chrono_classes.xar</filename>
<filesize>7010</filesize>
<author>XWiki.jvdrean</author>
<date>1184678731000</date>
<version>1.5</version>
<comment></comment>
<content></content>
</attachment>
<attachment>
<filename>xwikiskins.xar</filename>
<filesize>1450</filesize>
<author>XWiki.jvdrean</author>
<date>1184678731000</date>
<version>1.4</version>
<comment></comment>
<content>UEsDBBQACAAIAPyLgjYAAAAAAAAAAAAAAAAQAAAAWFdpa2kvWFdpa2lTa2luc92aUW/TMBDH3/Mpqr03aVYYm2SCxsYEEgNEB+PVTW5thhNHsbu1fHrOjuMkTQZs8iSUl82+c9y7/+/spE7Jm23GJndQipTnrw9Cf3YwgTzmSZqvXh98WHyeHh+/PJmGB28izyPb+/RnmvA48sg9LKMf19glgWp6JKcZVJbFzzQXJNAGjzCarzZ0BREJbNMjCdzQDZMfawvkJNi3eUSWNBeMSowtmpGg3fVIQUvIJU5rGh6JS6CSl1UU/mmSpThrbfQI3ci19d7eJehAv7Hi1RsheXbGqBA4abuHPp5L/IzTwRm6ThMGxnhOJURhODuah+FReDKbzUw0tQ9lqIa8ms+PDl/M5npIUrnMrN8K1T8fGNcf4BEDMgr9ExLUHdQxlUwBqP5jH7KCqSvQVDctk6vGuW/BD6AsTXQGi7hMCyV/z4SxG9mamvAHKuOPguveJS0KLETrrfs21u8p3C/WALIJtjHZUe+SVO6Nakx21DWWsfVf25q+SIElURV01f5nFSpAdxiQf5epii1Byt0nlX3XhzXcuOrkz1OBqu9s8nXfTix3BUQXG8Z2XyFPoITkCrbSFoZ2t2P9Cqt326ITqzF5pOT3IgpfkkA3sEI4ZzJVg+uWRzZ5hvvCTUqXWERYgJ2+R0T6C6JjtOuGgb+fp0EPKD+ulel0SgLTbkd6CUJUW0bfhhNvsiWUOlrTNBV3pTKOeeZvi9zXe5XPl7cQS+FrPwhfKXSKa1DXGUplL/Osbg2veF3ynBclN3PoymxD7PlHDHIgV5cwX7iGOcROFDSG3lpcKOt4ydVJu+V16JhXC80N5xLKHqYLbR4vJ5u2U1Cu11UbzpLiaLyldzm9RetE3ekfierf1H+q2vM9tevYrdiPXQCzJwi7kCU+vgzJ2pKS8RXvKvoRLf+1mEwH+EQhQ6dCGvXw8gwXtjjsbSNnxjPejaSdu9O95Nj5A1cXEn4Y9jc9ZF/QMblEz3iZtXJ3iuyVY2RdRhmNSy56vC61ebywbNpuH6nmjlm16eirGdxIrk4F+l9l+v7x4hvK1SVH19vkILu1zNgaaDLwoNxxjRfjXpouCR45JrgPSwXWw6aOpMZLy6TslNOJY0wNlgdW1nttHi+k51lOru9rbTjqsO4BWOogeDJ2Yp38nVJzvQfuk+oc0P3lbHXczyMDqbq8mbn+CjAEbvAdh1qA46X2HK80XL/RaLCYIFsw1J//+lAp1wE+8VDJ6ZmSiUHIHYP+TrVQ5vHWuc3aaaU7f33QYmM2KM52D7+zq53j5dZL1OU9xfWTdx9ZUP+GwGgaNS9oI/OVWP0Q5TdQSwcI188889kDAADAIgAAUEsDBBQACAAIAPyLgjYAAAAAAAAAAAAAAAALAAAAcGFja2FnZS54bWxNkEFvwjAMhe/+FVXuEHpAYpIbxGlCQhoSh+0aUrd4DWnVtIyfP1MaxMWOn5TP7xm396vPbtRHbkOh8uVKZRRcW3KoC7U/fS02m/XHIldbA4CddY2tyQByqNooPdgrmfsfNxwbDhH1JACWFF3P3SBUg/p9AvTsZAWZw+fxgDpNgHYcLm1vfr6Ftvy9lT3ZgHpWAWeTgksvwLMYGrujVFNZHwn1mwKok82KPaWelVTZ0Q87N0yZJbG3oR4lWKHUvH6qp2ekx6cHLEH06wz/UEsHCITMfwrNAAAAPgEAAFBLAQIUABQACAAIAPyLgjbXzzzz2QMAAMAiAAAQAAAAAAAAAAAAAAAAAAAAAABYV2lraS9YV2lraVNraW5zUEsBAhQAFAAIAAgA/IuCNoTMfwrNAAAAPgEAAAsAAAAAAAAAAAAAAAAAFwQAAHBhY2thZ2UueG1sUEsFBgAAAAACAAIAdwAAAB0FAAAAAA==</content>
</attachment>
<attachment>
<filename>chrono_sandbox.xar</filename>
<filesize>15941</filesize>
<author>XWiki.jvdrean</author>
<date>1184678731000</date>
<version>1.5</version>
<comment></comment>
<content></content>
</attachment>
<attachment>
<filename>chronomisc.xar</filename>
<filesize>23441</filesize>
<author>XWiki.jvdrean</author>
<date>1184678730000</date>
<version>1.5</version>
<comment></comment>
<content></content>
</attachment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Utils.ImportExport</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>#set($action = $request.action)
#if ($action == "getdocs")
$response.setContentType("text/xml")
#set($space = $request.spacename)
&lt;response&gt;
  #set($docs = $xwiki.getSpaceDocsName($request.spacename))
  #foreach ($docname in $docs)
    &lt;value&gt;${space}.$docname&lt;/value&gt;
  #end
&lt;/response&gt;
#elseif ($action == "getPackageList")
  $response.setContentType("text/xml")
  #set($alist = $doc.getAttachmentList())
&lt;response&gt;
  #foreach ($oAttach in $alist)
    ##set($import = $xwiki.package)
    &lt;value&gt;$oAttach.getFilename()&lt;/value&gt;
    ##$import.Import($oAttach.getContent())
  #end
&lt;/response&gt;
#elseif ($action == "getPackageInfos")
{pre}$response.setContentType("text/xml")
#set($packFile = $doc.getAttachment($request.packageName))
#set($import = $xwiki.package)
$import.Import($packFile.getContent())
$import.toXml(){/pre}
#elseif ($action == "import")
  #set($toImport = $request.getParameterValues("toImport"))
  #set($packFile = $doc.getAttachment($request.packageName))
  #set($import = $xwiki.package)
  $import.Import($packFile.getContent())
  #foreach ($itemexp in $toImport)
    #set($defaultAction = $request.get("action_${itemexp}"))
    $import.setDocumentAction($itemexp, $xwiki.parseInt($defaultAction))
  #end
  $import.install()
#elseif ($action == "export")
  #set($ToExport = $request.getParameterValues("toExport"))
  #set($withHistory = $request.withHistory)
  #set($author = $request.author)
  #set($description = $request.description)
  #set($licence = $request.licence)
  #set($version = $request.version)
  #set($packageName = $request.packageName)

  #set($export = $xwiki.package)

  #if ($withHistory=="true")
    $export.setWithVersions(true)
  #else
    $export.setWithVersions(false)
  #end
  #if ($author)
    $export.setAuthorName($author)
  #end
  #if ($description)
    $export.setDescription($description)
  #end

  #if ($licence)
    $export.setLicence($licence)
  #end

  #if ($version)
    $export.setVersion($version)
  #end

  $export.setName($packageName)
  #foreach ($itemexp in $ToExport)
    #set($defaultAction = $request.get("action_${itemexp}"))
    $export.add($itemexp, $xwiki.parseInt($defaultAction))
  #end
  $export.export()
#else
{pre}
&lt;style type="text/css"&gt;
  .td-docSelectorColumn {width:50%;padding:30px;margin:20px;background:#E5F0FE;vertical-align:top; border-right: 2px solid #384554;}
  .td-selectedColumn {width:50%;padding:30px;margin:20px;background:#E4F6FF;vertical-align:top;}
.Exportlink {
	color: #0063dc;
        text-decoration: none;
        cursor: pointer;
}

.Exportlink:hover {
    text-decoration: none;
    color: #ff0084;
}

.Exportlink:active {
        text-decoration: none;
        color: #ff0084;
}
.action{
        color: rgb(0, 104, 28);
        font-weight: bold;
}
&lt;/style&gt;
{/pre}
* [Ajouter un package&gt;$doc.fullName?viewer=attachments]
* [Importer un package&gt;$doc.fullName?action=showImport]
{pre}
&lt;div id="exportApp"&gt;
&lt;table style="width:100%; border-color:blue; border-spacing: 0; " border="0"&gt;
&lt;tr&gt;
&lt;td class="td-docSelectorColumn"&gt;&lt;h3 style="text-align:center;" id="firstColumnTitle"&gt;Your Wiki&lt;/h3&gt;
&lt;span id="spaceSelectorEl"&gt;  Select a Space: 
  #set($spaces = $xwiki.getSpaces())
  &lt;select name="spaceSelector" id="spaceSelector"&gt;
  &lt;option value="---"&gt;---&lt;/option&gt;
  #foreach ($space in $spaces)
    &lt;option value="$space"&gt;$space&lt;/option&gt;
  #end
  &lt;/select&gt;&lt;br /&gt;
&lt;span class="selectDocsActions"&gt;Select &lt;a onclick="selectItems('checkedDoc', false);" class="Exportlink"&gt;none&lt;/a&gt;, &lt;a onclick="selectItems('checkedDoc', true);" class="Exportlink"&gt;all&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td class="td-selectedColumn"&gt;&lt;h3 style="text-align:center;" id="secondColumnTitle"&gt;Your Package&lt;/h3&gt;
  &lt;select name="actionSelector" id="actionSelector"&gt;
  &lt;option style="color: rgb(119, 119, 119);"&gt;More Actions&lt;/option&gt;
  &lt;option value="delete"&gt;Delete&lt;/option&gt;
  &lt;option id="al" disabled="disabled" style="color: rgb(119, 119, 119);"&gt;Action if exist:&lt;/option&gt;
  &lt;option value="skip"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Skip&lt;/option&gt;
  &lt;option value="overwrite"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Overwrite&lt;/option&gt;
  &lt;/select&gt;&lt;br /&gt;
&lt;span class="selectDocsActions"&gt;Select &lt;a onclick="selectItems('selCheckedDoc', false);" class="Exportlink"&gt;none&lt;/a&gt;, &lt;a onclick="selectItems('selCheckedDoc', true);" class="Exportlink"&gt;all&lt;/a&gt;&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;
&lt;td class="td-docSelectorColumn"&gt;
&lt;div id="docSelectorColumn"&gt;
  &lt;span id="noSelectedSpace"&gt;&lt;br /&gt;&lt;h3&gt;Select a space first&lt;/h3&gt;&lt;/span&gt;
  &lt;div id="spaceDocs"&gt;
  


  &lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;td class="td-selectedColumn"&gt;
&lt;div id="selectedColumn"&gt;
&lt;b&gt;documents:&lt;/b&gt;
  &lt;span id="noSelectedDocs"&gt;&lt;br /&gt;&lt;h3 id="noSelectedDocsTxt"&gt;No selected documents to export&lt;/h3&gt;&lt;/span&gt;
  &lt;table id="selectedDocs"&gt;

  &lt;/table&gt;

&lt;/div&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td class="td-docSelectorColumn" style="text-align:right;"&gt;&lt;input type="button" onclick="addDocs();" id="bttAdd" value="Add to my package &amp;gt;&amp;gt;"/&gt;&lt;/td&gt;
&lt;td class="td-selectedColumn" style="text-align:left;"&gt;
&lt;h3&gt;Infos&lt;/h3&gt;
&lt;label for="appName"&gt;&lt;i&gt;Package Name&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appName" id="appName" value="package"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appDesc"&gt;&lt;i&gt;Description&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;textarea name="appDesc" id="appDesc"&gt;&lt;/textarea&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appLicence"&gt;&lt;i&gt;Licence&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appLicence" id="appLicence" value="LGPL"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appAuthor"&gt;&lt;i&gt;Author&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appAuthor" id="appAuthor" value="$context.user"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appVersion"&gt;&lt;i&gt;Version&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appVersion" id="appVersion" value=""&gt;&lt;br /&gt;&lt;br /&gt;
&lt;span id="historyEls"&gt;&lt;label for="appWithHistory"&gt;&lt;i&gt;Add history&lt;/i&gt;&lt;input type="checkbox" name="appWithHistory" id="appWithHistory" value="true"&gt;&lt;/label&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="td-docSelectorColumn" style="text-align:right;"&gt;&lt;/td&gt;
&lt;td class="td-selectedColumn" style="text-align:right;"&gt;&lt;input type="button" id="bttExport" onclick="bttExport()" value="Export" style=""/&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

&lt;/div&gt;
&lt;script type="text/javascript" src="/xwiki/prototype.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/xwiki/xwiki.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
	//declaring the class
	var SelectWatcher = Class.create();

	//defining the rest of the class implmentation
	SelectWatcher.prototype = {

	   initialize: function(selBox, callBack) {
			this.selBox = $(selBox);
			//assigning our method to the event
			this.selBox.onchange = callBack.bindAsEventListener(this);
	   }

	};
        var watcher = new SelectWatcher("spaceSelector", selectOptionCallBack);

        var watcher2 = new SelectWatcher("actionSelector", selectActionCallBack);

       function selectOptionCallBack(evt)
       {
         var pars = "action=getdocs&amp;spacename="+this.selBox.options[this.selBox.selectedIndex].value+"&amp;xpage=rdf";
         var myAjax = new Ajax.XWikiRequest( "$doc.web", "$doc.name", {method: 'get', parameters: pars, onComplete: showDocs} );
       }
      
       function selectActionCallBack(evt)
       {
          if (this.selBox.options[this.selBox.selectedIndex].value == "skip")
            setDocsAction("skip");
          else
            if (this.selBox.options[this.selBox.selectedIndex].value == "overwrite")
              setDocsAction("overwrite");
            else
              if (this.selBox.options[this.selBox.selectedIndex].value == "delete")
                deleteDocs(false);
         this.selBox.selectedIndex = 0;
       }

      function showDocs(res)
      {
        var tableName = "listTable";
        var tableEl = $(tableName);
        if (tableEl)
          Element.remove(tableName);
        createTable(tableName, "spaceDocs");
        var xml = res.responseXML;
        var docNodes = xml.getElementsByTagName("value");
        Element.hide("noSelectedSpace");
        for (var i = 0; i &lt; docNodes.length; i++)
        {
          insertTableRow(tableName, docNodes[i].firstChild.data, "doc");
        }
      }

       function showImportList()
       {
         var pars = "action=getPackageList&amp;xpage=rdf";
         var myAjax = new Ajax.XWikiRequest( "$doc.web", "$doc.name", {method: 'get', parameters: pars, onComplete: showPackageList} );
       }

      function showPackageList(res)
      {
        var tableName = "listTable";
        var tableEl = $(tableName);
        if (tableEl)
          Element.remove(tableName);
        createTable(tableName, "spaceDocs");
        var xml = res.responseXML;
        var packageNodes = xml.getElementsByTagName("value");
        for (var i = 0; i &lt; packageNodes.length; i++)
        {
          insertTableRow(tableName, packageNodes[i].firstChild.data, "pack");
        }
      }


      function createTable(id, parent){
         $(parent).innerHTML = "&lt;table id=" + id + "&gt;&lt;/table&gt;";
      }

      function insertTableRow(id, name, type){
         if (type == "doc")
           new Insertion.Bottom(id, "&lt;tr&gt;&lt;td&gt;" + name + "&lt;/td&gt;&lt;td&gt;&lt;input type='checkbox' value='"+name+"' id='check_" + name + "' class='checkedDoc'/&gt;&lt;/td&gt;&lt;/tr&gt;");
         else if (type == "pack")
           new Insertion.Bottom(id, "&lt;tr&gt;&lt;td&gt;&lt;a onclick='selectPackage(\""+ name +"\")' class='Exportlink'&gt;" + name + "&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;");
      }

      function insertNewSelectedDoc(id, value)
      {
         insertNewDoc(id, value, 0)
      }

      function insertNewDoc(id, value, action)
      {
         var sAction = actionToString(action);
         new Insertion.Bottom(id, "&lt;tr id='tr_" + value + "'&gt;&lt;td&gt;&lt;input type='checkBox' value='" + value + "' class='selCheckedDoc' id='sel_" + value + "' /&gt;&lt;span id='" + value + "' class='exportDocName'&gt;" + value + "&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span id='action_" + value + "' class='action'&gt;" + sAction + "&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;");
      }

      function actionToString(actionId)
      {
         if (actionId == "0")
           return "overwrite";
         else
           return "skip";
      }

      function actionToInt(action)
      {
         if (action == "overwrite")
           return 0;
         else
           return 1;
      }


      function setDocsAction(action)
      {
        var docs = document.getElementsByClassName("exportDocName");
         var i;
         for (i = 0; i &lt; docs.length; i++)
         {
             var doc = docs[i];
             if ($('sel_' + doc.innerHTML).checked)
               $('action_' + doc.innerHTML).innerHTML = action;
         }
      }

   /*   function deleteDocs()
      {
        var docs = document.getElementsByClassName("exportDocName");
         var i;
         for (i = 0; i &lt; docs.length; i++)
         {
             var doc = docs[i];
             if ($('sel_' + doc.innerHTML).checked)
               Element.remove('tr_' + doc.innerHTML);
         }
      }*/

      function deleteDocs(force)
      {
        var docs = document.getElementsByClassName("exportDocName");
         var i;
         for (i = 0; i &lt; docs.length; i++)
         {
             var doc = docs[i];
             if ($('sel_' + doc.innerHTML).checked || force)
               Element.remove('tr_' + doc.innerHTML);
         }
      }


      function addDocs()
      {
         //var destEl = $("selectedDocs");
         var docs = document.getElementsByClassName("checkedDoc");
         Element.hide("noSelectedDocs");
         var i;
         for (i = 0; i &lt; docs.length; i++)
           {
             var doc = docs[i];
             if (doc.checked == true)
              insertNewSelectedDoc("selectedDocs", doc.value)
           }
      }

      function bttExport()
      {
         var docs = document.getElementsByClassName("exportDocName");
         var i;
         var url = "?action=export&amp;withHistory=" + $F("appWithHistory") + "&amp;version=" + $F("appVersion") + "&amp;author=" + $F("appAuthor") + "&amp;description=" + $F("appDesc") + "&amp;licence=" + $F("appLicence") + "&amp;packageName=" + $F("appName");
         for (i = 0; i &lt; docs.length; i++)
         {
             var docname = docs[i].innerHTML;
             var action = actionToInt($("action_" + docname).innerHTML);//$("action_" + docname).innerHTML == "skip" ? 1:0;
             url = url + "&amp;toExport=" + docname + "&amp;action_" + docname + "=" + action;
         }
         window.location=url;
      }


      function bttImport()
      {
         var docs = document.getElementsByClassName("exportDocName");
         var i;
         var url = "?action=import&amp;packageName=" + $("SelectedPackageName").innerHTML;
         for (i = 0; i &lt; docs.length; i++)
         {
             var docname = docs[i].innerHTML;
             var action = actionToInt($("action_" + docname).innerHTML);
             url = url + "&amp;toImport=" + docname + "&amp;action_" + docname + "=" + action;
         }
         
         window.location=url;
      }

      function selectItems(classId, selected)
      {
         var docs = document.getElementsByClassName(classId);
         var i;
         for (i = 0; i &lt; docs.length; i++)
           {
             var doc = docs[i];
             doc.checked = selected;
           }
      }

      function changeToImport()
      {
        $("firstColumnTitle").innerHTML = "select or upload a package";
        $("noSelectedDocsTxt").innerHTML = "no selected package to import";
        $("bttExport").value = "Import";
        $("bttExport").onclick = bttImport;
        Element.hide("bttAdd");
        Element.hide("noSelectedSpace");
        Element.hide("historyEls");
        showImportList();
        Element.hide("spaceSelectorEl");
      }

      function selectPackage(name)
      {
         var pars = "action=getPackageInfos&amp;packageName="+name+"&amp;xpage=plain";
         $("secondColumnTitle").innerHTML = "package: &lt;span id='SelectedPackageName'&gt;" + name + "&lt;/span&gt;";
         var myAjax = new Ajax.XWikiRequest( "$doc.web", "$doc.name", {method: 'get', parameters: pars, onComplete: showPackageInfos} );
      }

      function getXmlValue(tag, xml)
      {
        var nodes = xml.getElementsByTagName(tag);
        if (nodes.length &gt; 0 &amp;&amp; nodes[0].firstChild)
          return nodes[0].firstChild.data;
        else
          return "";
      }

      function showPackageInfos(res)
      {
        var xml = res.responseXML;

        var name = getXmlValue("name", xml);
        var licence = getXmlValue("licence", xml);
        var description = getXmlValue("description", xml);
        var author = getXmlValue("author", xml);
        var version = getXmlValue("version", xml);

        $("appName").value = name;
        $("appDesc").value = description;
        $("appAuthor").value = author;
        $("appVersion").value = version;
        $("appLicence").value = licence;

        deleteDocs(true);

        var nodes = xml.getElementsByTagName("file");
        for (var i = 0; i &lt; nodes.length; i++)
        {
          var doc = nodes[i];
          insertNewDoc("selectedDocs", doc.firstChild.data, doc.getAttribute("defaultAction"));
        }

        Element.hide("noSelectedDocs");
      }

      #if ($request.action == "showImport")
        changeToImport();
      #end
&lt;/script&gt;
{/pre}
#end</content>
</xwikidoc>
