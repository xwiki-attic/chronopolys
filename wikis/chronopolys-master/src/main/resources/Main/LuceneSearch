<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>Main</web>
<name>LuceneSearch</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.jvdrean</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1182933156000</creationDate>
<date>1195203728000</date>
<contentUpdateDate>1195203728000</contentUpdateDate>
<version>3.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<attachment>
<filename>disk.png</filename>
<filesize>620</filesize>
<author>XWiki.jvdrean</author>
<date>1193388255000</date>
<version>1.4</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAH+SURBVBgZBcE9i11VGAbQtc/sO0OCkqhghEREAwpWAWUg8aMVf4KFaJEqQtAipTZWViKiCGOh2Ap2gmJhlSIWFsFOxUK0EsUM3pl79n4f12qHb3z3Fh7D83gC95GOJsDe0ixLk5Qq/+xv/Lw9Xd+78/HLX3Y8fXTr2nWapy4eCFKxG7Fby97SnDlYtMbxthyfzHO//nl85fNvfvnk8MbX5xa8IHx1518Vkrj54Q+qQms2vVmWZjdiu5ZR2rT01166/NCZg/2PFjwSVMU6yjoC1oq+x6Y3VbHdlXWExPd379nf7Nmejv2Os6OC2O4KLK0RNn3RNCdr2Z5GJSpU4o+/TkhaJ30mEk5HwNuvX7Hpi76wzvjvtIwqVUSkyjqmpHS0mki8+9mPWmuWxqYvGkbFGCUAOH/+QevYI9GFSqmaHr5wkUYTAlGhqiRRiaqiNes6SOkwJwnQEqBRRRJEgkRLJGVdm6R0GLMQENE0EkmkSkQSVVMqopyuIaUTs0J455VLAAAAAODW0U/GiKT0pTWziEj44PZ1AAAAcPPqkTmH3QiJrlEVDXDt0qsAAAAAapa5BqUnyaw0Am7//gUAAAB49tEXzTmtM5KkV/y2G/X4M5fPao03n/sUAAAAwIX7y5yBv9vhjW/fT/IkuSp5gJKElKRISYoUiSRIyD1tufs/IXxui20QsKIAAAAASUVORK5CYII=</content>
</attachment>
<attachment>
<filename>resultset_previous.png</filename>
<filesize>389</filesize>
<author>XWiki.jvdrean</author>
<date>1193388255000</date>
<version>1.4</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEXSURBVDjLY/j//z8DJZiBLgZkz37Ynjrz4ReyDEideb89afrDf5ET7v4n2YCEqXf7qpY9/T9r76v/Xu03STMgasLteaVLHv+fufvl/6k7X/y3qrlCvAHBvTeXFC54ANbctv7p/95Nz/5rFZ0nzoCAzpuPsuc++D91x4v/jasf/y9aeP9/89rH/6VTTxJngGPDtc3xU+/879789H/5kgf/02fd+V+17OF/yZhjxBmgVXCaRT3v7BqP1mv/a1Y+/J824/b/woX3/osHHSAtECVjjqy0Lb/wP2/+3f+Zs+/8F3XfS3o0inntXWSeffJ/0tRb/0Ucdv4nKyEJW25ZYBh/5L+w5fb/ZCdlQYMNs4WMt/wfuMyEDwMA0Irn/pDRT58AAAAASUVORK5CYII=</content>
</attachment>
<attachment>
<filename>16-star-hot.png</filename>
<filesize>296</filesize>
<author>XWiki.jvdrean</author>
<date>1193388255000</date>
<version>1.4</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAADlQTFRF0a1l+d9V4LlX5Mls37ZRz6dZ4sBj/OyL59OS6Niy5tCC0axl/fO4+uVn1bd99MdKubiw2L+PubiwcwcD5gAAABN0Uk5T////////////////////////ALJ93AgAAABmSURBVHjahI/RDoAgCEUpM00NL/3/x0Zhttpa5wG2s3EB2l5Q6yI/QpZFnqKUW4gSQ4hHN5HWRjIBZjcojhmWAeSqZOAK9dMhJt+3UB2Jxkpd8MyAli5EdBp27CnOtFbp69vOLsAAgocP64e71tIAAAAASUVORK5CYII=</content>
</attachment>
<attachment>
<filename>resultset_next.png</filename>
<filesize>395</filesize>
<author>XWiki.jvdrean</author>
<date>1193388255000</date>
<version>1.4</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEdSURBVDjLY/j//z8DJZiB6gY0rH7xpW7li3YKDHj1v2bli38lix61k2VA5fJn/9eeeP+/fcOL/wlT7/aRbEDegkf/Vxx/93/xobf/S5c8/u/ecm0eSQYkTX/4f+HBN/8nbX/xf+bul/8Tp9/9r1N0dgnRBgT33QZqfPW/YdXj/42rH//v2vjkv3fHtf9SScceEWWAc8u1/xO2Pv9fsvjB//IlD4CGPPrvXH/5v2Tksc1EGWBaful/+/on/4sW3gfGxsP/9lUX/ksEH1gj6rqdhSgDlPPO/q9b8fB/5bIH/23LL/wXD9i7kqRAlEo6+b908f3/NiXn/4t57V1EcjRKRB75b1145r+o684FZCUkMb8D/0Uct88euMxEKgYA7Ojrv4CgE7EAAAAASUVORK5CYII=</content>
</attachment>
<attachment>
<filename>result_search_newton.PNG</filename>
<filesize>25165</filesize>
<author>XWiki.jvdrean</author>
<date>1193388256000</date>
<version>1.4</version>
<comment></comment>
<content></content>
</attachment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Main.LuceneSearch</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>##Bugs: 
##-getSearchResults returns to much results (sometimes the same page twice, for example Test)
## This might cause of a problem in lucene\searchresults.java getRelevantResults()?
##
##-you can still search for passwords
##
##-previous/next buttons:
## query "win*" is broken into "win&lt;/strong&gt;" (LuceneSearch?text=win&lt;/strong&gt;&amp;firstIndex=11) instead of LuceneSearch?text=win*&amp;firstIndex=11
## this java method doesn't solve the problem: why?
##   set($qlinkfix = "$query.replaceAll("&lt;/strong&gt;", "*")")

#set($query = $request.getParameter("text"))
#if(!$query)
	#set($query = "")
#end
#set($itemsPerPage = "30")
##{pre}
##&lt;form action="$doc.name" method="post"&gt;
##&lt;input type="text" name="text" value="$query" /&gt;
##&lt;input type="submit" value="$msg.get("search")"/&gt;
##&lt;/form&gt;
##{/pre}

#if($query != "")
	#set($lucene = $xwiki.getPlugin("lucene"))
	#if($lucene)
		#set($wikinames = "xwiki")
		#set($languages = "default,en,de")
		#set($firstIndex = $request.getParameter("firstIndex"))
		#if(!$firstIndex)
			#set($firstIndex = "1")
		#end
		#set($searchresults = $lucene.getSearchResults($query, $wikinames, $languages, $xwiki))
		#set($results = $searchresults.getResults($firstIndex,$itemsPerPage))
		#if($searchresults.getHitcount()&gt;0)
			#set($lastIndex=$searchresults.getEndIndex($firstIndex, $itemsPerPage))
			#if($searchresults.getHitcount()==1)
				##$msg.get("oneresult"):
			#else
				##$msg.get("results") $firstIndex - $lastIndex $msg.get("resultof") ${searchresults.getHitcount()}:
			#end

			#if($searchresults.hasPrevious($firstIndex))
				#set($linkfirstIndex = $searchresults.getPreviousIndex($firstIndex,$itemsPerPage))
				#set($link = "${doc.name}?text=${query}&amp;firstIndex=${linkfirstIndex}")
				&lt;a href="${link}"&gt;
				&lt;img src="${doc.getAttachmentURL("resultset_previous.png")}" alt="previous"&gt;$msg.get("previous_page")
				&lt;/a&gt;
			#end
			
			#if($searchresults.hasNext($firstIndex,$itemsPerPage))
				#set($linkfirstIndex = $searchresults.getNextIndex($firstIndex,$itemsPerPage))
				#set($link = "${doc.name}?text=${query}&amp;firstIndex=${linkfirstIndex}")
				&lt;a href="$link"&gt;
				&lt;img src="${doc.getAttachmentURL("resultset_next.png")}" alt="next"&gt;$msg.get("next_page")
				&lt;/a&gt;
			#end

		
			&lt;table width="100%" class="grid" cellSpacing=0 cellpadding="5" border="1"&gt;
			&lt;tr&gt;
			&lt;th align=left&gt;$msg.get("resultpage")&lt;/th&gt;
			##&lt;th align=left&gt;$msg.get("resultspace")&lt;/th&gt;
			&lt;th align=left&gt;$msg.get("resultdate")&lt;/th&gt;
			&lt;th align=left&gt;$msg.get("resultlastauthor")&lt;/th&gt;
			&lt;th align=left&gt;$msg.get("resultscore")&lt;/th&gt;
			&lt;/tr&gt;
			
			#foreach($result in $results)
            #if ($xwiki.chronopolys.isProject(${result.web}) || $xwiki.chronopolys.isUser("${result.web}.${result.name}"))
                #if ($xwiki.chronopolys.isProject(${result.web}))
                    #set($type="project")
                    #set($prj=$xwiki.chronopolys.getProject($result.web))
                #else
                    #set($type="user") 
                #end
				&lt;tr&gt;
				#if($result.type=='attachment')
					##attachments
					&lt;td align=left&gt;&lt;a href="${result.url}" target="_blank"&gt;&lt;img src="${doc.getAttachmentURL("disk.png")}" ALT="download"&gt; ${result.filename}&lt;/a&gt;\\
					$msg.get("attachmentof") [$msg.get(${result.name})&gt;${result.web}.${result.name}]&lt;/td&gt;
					##&lt;td align=left&gt;[${result.web}&gt;${result.web}.WebHome]&lt;/td&gt;
				#else
                    #if($type=="project")
                        #set ($cdoc = $xwiki.getDocument("${result.web}.${result.name}"))
                        #set ($wdoc = $xwiki.getDocument("${result.web}.WebHome"))
                        #if ($prj.isPlogPage($cdoc.name))
                            &lt;td align=left&gt;[$cdoc.displayTitle&gt;${result.web}.${result.name}]&lt;/td&gt;
                        #elseif ($prj.isWikiPage($cdoc.name))
                            &lt;td align=left&gt;[$cdoc.getDisplayTitle()&gt;${result.web}.${result.name}]&lt;/td&gt;
                        #elseif ($result.name == "WebHome")
                            &lt;td align=left&gt;[$cdoc.display("name", "view")&gt;${result.web}.${result.name}]&lt;/td&gt;
                        #elseif ($result.name == "ProjectPhases")
                            &lt;td align=left&gt;[$wdoc.display("name", "view") (${msg.get("phases")})&gt;${result.web}.WebHome]&lt;/td&gt;
                        #elseif ($result.name == "ProjectMembers")
                            &lt;td align=left&gt;[$wdoc.display("name", "view") (${msg.get("members")})&gt;${result.web}.WebHome]&lt;/td&gt;
                        #elseif ($result.name == "ProjectLeaders")
                            &lt;td align=left&gt;[$wdoc.display("name", "view") (${msg.get("projectleader")})&gt;${result.web}.WebHome]&lt;/td&gt;
                        #else
                            &lt;td align=left&gt;[${result.web}.${result.name}]&lt;/td&gt;
                        #end
                    #else
                        &lt;td align=left&gt;[${result.web}.${result.name}]&lt;/td&gt;
                    #end
					##&lt;td align=left&gt;[${result.web}&gt;${result.web}.WebHome]&lt;/td&gt;
				#end
				&lt;td&gt;$xwiki.formatDate($result.date, "d. MMM yyyy")&lt;/td&gt;
				&lt;td&gt;$xwiki.getUserName($result.author)&lt;/td&gt;
				&lt;td&gt;
				#set($resval=$result.score*100)
				#if($resval&gt;10)
					&lt;img src="${doc.getAttachmentURL("16-star-hot.png")}" alt="$resval" title="value : $resval" width="16" height="16"&gt;
				#end
				#if($resval&gt;20)
					&lt;img src="${doc.getAttachmentURL("16-star-hot.png")}" alt="$resval" title="value : $resval" width="16" height="16"&gt;
				#end
				#if($resval&gt;40)
					&lt;img src="${doc.getAttachmentURL("16-star-hot.png")}" alt="$resval" title="value : $resval" width="16" height="16"&gt;
				#end
				#if($resval&gt;60)
					&lt;img src="${doc.getAttachmentURL("16-star-hot.png")}" alt="$resval" title="value : $resval" width="16" height="16"&gt;
				#end
				#if($resval&gt;90)
					&lt;img src="${doc.getAttachmentURL("16-star-hot.png")}" alt="$resval" title="value : $resval" width="16" height="16"&gt;
				#end
				##${resval}%
				&lt;/td&gt;
				&lt;/tr&gt;
            #end
			#end
		#else
			$msg.get("noresults")
		#end
		&lt;/table&gt;
		\\
	#else
		Error: Lucene plugin not found. Have you enabled the plugin in xwiki.cfg?
	#end
#end

#set($doRebuild = $request.getParameter("rebuild"))
#if($doRebuild=="yes")
	#set($lucene = $xwiki.getPlugin("lucene"))
	#if($lucene)
		#set($documentCount = $lucene.rebuildIndex($xwiki,$context))
		#if(${documentCount}&gt;=0)
			Started index rebuild with $documentCount documents. Will take some time depending on the number of pages/attachments.
		#else
			Error: Index rebuild failed.
		#end
	#end
#else
	##if($xwiki.hasAdminRights())
        #if ($isXWikiAdmin)
		[rebuild Index&gt;${doc.web}.${doc.name}?rebuild=yes]
	#end
#end</content>
</xwikidoc>
