#macro(panelheadercollapsed $title)
<div class="panel collapsed">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>
<div class="xwikipanelcontents">
#end
#macro(includeInContextNoPre $page)
$xwiki.includeForm($page, false)
#end
#macro(displayRsvps $bentrydoc)
<table>
<tr><td colspan="4">*$msg.get('meetingguests') :*</td></tr>
#foreach($guest in $bentrydoc.getObjects("ChronoClasses.ProjectArticleRsvpClass"))
<tr><td width="10"></td><td>#displayUserProfileLink($guest.member)</td>
#set ($imgmeetingstatus = "meeting_${guest.status}.gif")
#set ($meetingstatus = "meeting_${guest.status}")
#set ($msgmeetingstatus = "meeting${guest.status}")
#set ($imsgmeetingstatus = "imeeting${guest.status}")
#if ($project.isProjectLeader() || $guest.member==$context.user)
<td style="text-align:left;" width="70" >
#if($guest.status!="yes")<a class="meetingyes" href="$bentrydoc.getURL("saveandcontinue", "ChronoClasses.ProjectArticleRsvpClass_$guest.getNumber()_status=yes")" title="$msg.get('imeetingyes')"></a>#else<img src="$xwiki.getSkinFile('meeting_yes.gif')" style="float:right;" alt="$msg.get('meetingyes')" height="15"/>#end
#if($guest.status!="no")<a class="meetingno" href="$bentrydoc.getURL("saveandcontinue", "ChronoClasses.ProjectArticleRsvpClass_$guest.getNumber()_status=no")" title="$msg.get('imeetingno')"></a>#else<img src="$xwiki.getSkinFile('meeting_no.gif')" style="float:right;" alt="$msg.get('meetingno')" height="15"/>#end
#if($guest.status!="maybe")<a class="meetingmaybe" href="$bentrydoc.getURL("saveandcontinue", "ChronoClasses.ProjectArticleRsvpClass_$guest.getNumber()_status=maybe")" title="$msg.get('imeetingmaybe')"></a>#else<img src="$xwiki.getSkinFile('meeting_maybe.gif')" style="float:right;" alt="$msg.get('meetingmaybe')" height="15"/>#end
</td><td>$msg.get($imsgmeetingstatus)
#else
<td style="text-align:right;" width="55">
<img src="$xwiki.getSkinFile($imgmeetingstatus)" alt="$msg.get($meetingstatus)" height="15"/></td><td>$msg.get($msgmeetingstatus)
#end
</td></tr>
#end
</table>
#end


#macro(displayUserFullName $user)
#set ($memberProfile = $xwiki.getDocument($user))
$memberProfile.display("first_name", "view") $memberProfile.display("last_name", "view")
#end

#macro(displayUserProfileLink $user)
#set($userDoc = $xwiki.getDocument($user))
[$!{userDoc.display("first_name", "view")} $!{userDoc.display("last_name", "view")}>$user]
#end

#macro(redirect $page)
$context.getResponse().sendRedirect($xwiki.getURL($page,"view"))
#end

#macro(displayUser $value)
#set($userDoc = $xwiki.getDocument($value))
[$!{userDoc.display("first_name", "view")} $!{userDoc.display("last_name", "view")}>$value]
#end

###
###    Separator
###
### Insert a span containing a |
###
#macro (sep)
<span class="separator"> | </span>
#end

###
###    useravatar
###
### Display the avatar of a user, or a standard image if the user has no avatar
###
### @param username The name of the user whose avatar will be displayed
###
#macro(useravatar $username)
  #if(!$picturelist)
    #set($picturelist = $xwiki.hashMap)
  #end
  #if(!$picturelist.containsKey($username))
    #set($picture = "<img src='")
    #set($picture = $picture.concat($xwiki.getSkinFile("noavatar.png")))
    #set($picture = $picture.concat("' alt='$username' title='$username'/>"))
    #set($profiledoc = $xwiki.getDocument($username))
    #if(!$profiledoc.isNew())
      #set($profileobj = $profiledoc.getObject("XWikiUsers", 0))
      #if($profiledoc.attachmentList.size() != 0)
        #set($hasavatar = 0)
        #if($profileobj.avatar && $profileobj.avatar != "")
          #foreach ($attach in $profiledoc.attachmentList)
            #if($attach.filename == $profileobj.avatar)
              #set($hasavatar = 1)
            #end
          #end
        #end
        #if($hasavatar == 1)
          #set($pictureurl = $profiledoc.getAttachmentURL($profileobj.avatar))
          #set($picture = "<img src='")
          #set($picture = $picture.concat($pictureurl))
          #set($picture = $picture.concat("' alt='"))
          #set($picture = $picture.concat($username))
          #set($picture = $picture.concat("' title='"))
          #set($picture = $picture.concat($username))
          #set($picture = $picture.concat("'/>"))
        #end
      #end
    #end
    $!picturelist.put($username, $picture)
  #end
  $picturelist.get($username)
#end

###
###    mimetypeimg
###
### Display an icon according to the mimetype
###
### @param mime The reported mimetype of the file
### @param fname The name of the file
###
#macro(mimetypeimg $mime $fname)
#set($idx = $fname.lastIndexOf("."))
#set($idx = $idx + 1)
#if(($idx != 0) && ($idx != -1))
#set($ext = $fname.substring($idx))
#else
#set($ext = "")
#end
#####    images
#if($mime.equals("image/svg"))
<img src="$xwiki.getSkinFile("mimetypes/vectorgfx.png")" alt="[svg]" title="[svg]"/>#elseif($mime.equals("application/svg+xml"))
<img src="$xwiki.getSkinFile("mimetypes/vectorgfx.png")" alt="[svg]" title="[svg]"/>#elseif($mime.startsWith("image/"))
<img src="$xwiki.getSkinFile("mimetypes/jpg.png")" alt="[img]" title="[img]"/>#####    text based
#elseif($mime.equals("text/plain"))
<img src="$xwiki.getSkinFile("mimetypes/txt.png")" alt="[text]" title="[text]"/>#elseif($mime.equals("text/html"))
<img src="$xwiki.getSkinFile("mimetypes/html.png")" alt="[html]" title="[html]"/>#elseif($mime.equals("text/css"))
<img src="$xwiki.getSkinFile("mimetypes/url.png")" alt="[css]" title="[css]"/>#elseif($mime.startsWith("text/"))
<img src="$xwiki.getSkinFile("mimetypes/txt.png")" alt="[text]" title="[text]"/>#####    documents
#elseif($mime.equals("application/xml"))
<img src="$xwiki.getSkinFile("mimetypes/xml.png")" alt="[xml]" title="[xml]"/>#elseif($mime.equals("application/pdf"))
<img src="$xwiki.getSkinFile("mimetypes/pdf.png")" alt="[pdf]" title="[pdf]"/>#elseif($mime.equals("application/postscript"))
<img src="$xwiki.getSkinFile("mimetypes/ps.png")" alt="[ps]" title="[ps]"/>#elseif($mime.equals("application/msword"))
<img src="$xwiki.getSkinFile("mimetypes/word.png")" alt="[doc]" title="[doc]"/>#elseif($mime.equals("application/powerpoint"))
<img src="$xwiki.getSkinFile("mimetypes/ppt.png")" alt="[ppt]" title="[ppt]"/>#elseif($mime.equals("application/x-shockwave-flash"))
<img src="$xwiki.getSkinFile("mimetypes/swf.png")" alt="[swf]" title="[swf]"/>#####    archives
#elseif($mime.equals("application/x-tar"))
<img src="$xwiki.getSkinFile("mimetypes/tar.png")" alt="[tar]" title="[tar]"/>#elseif($mime.equals("application/zip"))
<img src="$xwiki.getSkinFile("mimetypes/zip1.png")" alt="[zip]" title="[zip]"/>#elseif($mime.equals("application/x-gzip"))
<img src="$xwiki.getSkinFile("mimetypes/tar_gz.png")" alt="[gz]" title="[gz]"/>#elseif($mime.equals("application/java-archive"))
<img src="$xwiki.getSkinFile("mimetypes/jar.png")" alt="[jar]" title="[jar]"/>#####    media
#elseif($mime.startsWith("audio/"))
<img src="$xwiki.getSkinFile("mimetypes/wav.png")" alt="[audio]" title="[audio]"/>#elseif($mime.startsWith("video/"))
<img src="$xwiki.getSkinFile("mimetypes/video.png")" alt="[video]" title="[video]"/>#####    octet-streams extensions
#elseif($mime.equals("application/octet-stream"))
#if($ext.equals("xls"))
<img src="$xwiki.getSkinFile("mimetypes/excel.png")" alt="[xls]" title="[xls]"/>#elseif($ext.equals("bz") || $ext.equals("bz2") || $ext.equals("tbz"))
<img src="$xwiki.getSkinFile("mimetypes/tar_bz.png")" alt="[bz]" title="[bz]"/>#elseif($ext.equals("tgz"))
<img src="$xwiki.getSkinFile("mimetypes/tar_gz.png")" alt="[gz]" title="[gz]"/>#elseif($ext.equals("rar"))
<img src="$xwiki.getSkinFile("mimetypes/zip1.png")" alt="[rar]" title="[rar]"/>#elseif($ext.equals("odp") || $ext.equals("odt") || $ext.equals("odf") || $ext.equals("sxw") || $ext.equals("stw"))
<img src="$xwiki.getSkinFile("mimetypes/openoffice.png")" alt="[odf]" title="[odf]"/>#else
<img src="$xwiki.getSkinFile("mimetypes/bin.png")" alt="[bin]" title="[bin]"/>#end
#elseif($mime.startsWith("application/"))
<img src="$xwiki.getSkinFile("mimetypes/exec.png")" alt="[app]" title="[app]"/>#end
#end

###
###    packName
###
### Display a shorter version of a string
###
### @param name The processed string
###
#macro(packName $name)
#if(!$maxnamelength)
#set($maxnamelength = 25)
#end
#set($idx = $name.lastIndexOf("."))
#if(($idx != 0) && ($idx != -1))
#set($ext = $name.substring($idx))
#else
#set($ext = "")
#set($idx = $name.length())
#end
#set($fname = $name.substring(0, $idx))
#if($fname.length() > $maxnamelength)$fname.substring(0, $maxnamelength)~$ext#else$name#end
#end

###
###    Panel header
###
### Generate the starting html code for a panel
###
### @param title The panel caption title
###
#macro(panelheader $title)
<div class="panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>
<div class="xwikipanelcontents">
#end
#macro(panelhiddenheader $title)
<div class="panel expanded">
<h5 class="xwikipaneltitle hidden" onclick="togglePanelVisibility(this.parentNode);">$title</h5>
<div class="xwikipanelcontents">
#end
#macro(largepanelheader $title)
<div class="large panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end

###
###    Panel footer
###
### Generate the ending html code for a panel
###
#macro(panelfooter)
</div>
</div>
#end

###
###    Display Panel
###
### Extract and display the panel code from the panel object
###
#macro(displaypanel $name)
  #set ($pobj = "")
  #set ($paneldoc = $xwiki.getDocument($name))
  #if ($paneldoc && $name.endsWith($paneldoc.fullName))
    #set ($pobj = $paneldoc.getObject("Panels.PanelClass"))
    #if (!$pobj && $pobj.name)
      ## discarded
    #else
      $!doc.display("content", "view", $pobj)
    #end
  #end
#end

#macro(displayPropName $prop)
#if($msg.get("$class.getName()_$prop.name") == "$class.getName()_$prop.name")
$prop.prettyName#else
$msg.get($prop.name)#end
#end

###
###    Display Panel content
###
###
#macro(displaypanelcontent $doc $obj)
$doc.display("content", $obj)
#end

###
###    Toplevel Menu entry with subitems
###
### Generate a menu entry and start the subitem section
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(xwikitopmenuentrystart $actionurl $linktext $id)
<div class="topmenuentry" onmouseover="showsubmenu(this);" onmouseout="hidesubmenu(this);" id="$id"><a class="tme" href="$actionurl"><strong>$linktext</strong></a><span class="hidden menucolon">: </span><span class="submenu hidden">
#end

###
###    Toplevel Menu entry without subitems
###
### Generate a menu entry withut subitems
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(xwikitopmenuentry $actionurl $linktext $id)
<div class="topmenuentry" id="$id"><a href="$actionurl"><strong>$linktext</strong></a></div>
#end

###
###    Menu subitem entry
###
### Generate a submenu entry
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(submenuitem $actionurl $linktext)
<span class="submenuitem"><a href="$actionurl">$linktext</a></span>
#end

###
###    Toplevel Menu entry end
###
### End the subitem section
###
#macro(xwikitopmenuentryend)
</span></div>
#end



#macro(xwikimessageboxfield $fielddoc $fieldname $fieldtext $html)
<div class="xmblabel">$fieldtext</div>
<div class="xmbfield">
#if($fieldname!="")
$fielddoc.display($fieldname, "edit")
#end
#if($html!="")
$html
#end
</div>
#end

#macro(xwikimessageboxsubmit $submittext)
<div class="xmbbutton">
<input type="submit" value="$submittext" />
</div>
#end


###
###    message
###

#macro(warning $text)
<div class="warningmessage"><span class="messagetype">$msg.get("warning"): </span>$text</div>
#end

#macro(error $text)
<div class="errormessage"><span class="messagetype">$msg.get("error"): </span>$text</div>
#end

#macro(info $text)
<div class="infomessage">$text</div>
#end

#macro(message $text)
<div class="plainmessage">$text</div>
#end

#macro (floatingbox $text)
<fieldset class="floatinginfobox">$text</fieldset>
#end

#macro (startfloatingbox)
<fieldset class="floatinginfobox">
#end

#macro (endfloatingbox)
</fieldset>
#end

###
###    CSS properties
###

#macro(csscolorproperty $csspropname $fieldname)
#set($objcolor = $colors.get($fieldname))
#if($objcolor && $objcolor != "")
  $csspropname: $objcolor;
#end
#end

#macro(csscolorpropertyimportant $csspropname $fieldname)
#set($objcolor = $colors.get($fieldname))
#if($objcolor && $objcolor != "")
  $csspropname: $objcolor !important;
#end
#end


#macro(displayPropName $prop)
#if($msg.get("$class.getName()_$prop.name") == "$class.getName()_$prop.name")
$prop.prettyName#else
$msg.get($prop.name)#end
#end


###
###    Display Panel content
###
###
#macro(displaypanelcontent $doc $obj)
$doc.display("content", $obj)
#end



###
###   Rounded box
###
#macro(roundedtop)
<div class="rounded">
<b class="top">
<b class="b1"></b>
<b class="b2"></b>
<b class="b3"></b>
<b class="b4"></b>
</b>
</div>
<div class="roundedcontent">
#end

#macro(roundedbottom)
<div class="clearall"></div>
</div>
<div class="rounded">
<b class="bottom">
<b class="b4b"></b>
<b class="b3b"></b>
<b class="b2b"></b>
<b class="b1b"></b>
</b>
</div>
#end

###
###    Message box
###
#macro(xwikimessageboxstart $title $message)
    <div class="centered">
    #roundedtitletop($title)
      <p class="xwikimessage">$message</p>
#end
#macro(xwikimessageboxend)
    #roundedbottom()
    </div>
#end

###
### Plog
###

#macro(roundedtitletop $title)
<div class="rounded-title" #if (!$currentStyle) style="background-color:#eee;color:#D61385;" #else style="background-color:$currentStyle" #end >
  $title
</div>
<div class="roundedcontent">
#end
#macro(roundedmediumtitletop $title)
<div class="rounded-medium-title" #if (!$currentStyle) style="background-color:#eee;color:#D61385;" #else style="background-color:$currentStyle" #end >
  $title
</div>
<div class="roundedcontent">
#end

#macro(roundedbackgroundtop $backgroundcolor)
<div class="rounded">
<b class="top">
<b class="b1"></b>
<b class="b2"></b>
<b class="b3" style="background-color:$backgroundcolor;"></b>
<b class="b4" style="background-color:$backgroundcolor;"></b>
</b>
</div>
<div class="roundedcontent" style="background-color:$backgroundcolor;">
#end
#macro(roundedbackgroundbottom $backgroundcolor)
<div class="clearall"></div>
</div>
<div class="rounded">
<b class="bottom">
<b class="b4b" style="background-color:$backgroundcolor;"></b>
<b class="b3b" style="background-color:$backgroundcolor;"></b>
<b class="b2b"></b>
<b class="b1b"></b>
</b>
</div>
#end
        
### capitalizes a string 
#macro(capitalize $string)
 #set($fl = $string.substring(0,1).toUpperCase()) ## make first letter uppercase
 #set($nl = $string.substring(1)) 
 #set($string = $fl + $nl)
#end
 
### sort by last name an array of objects representing users
### the idea is to make a map with objects having lastnames as keys, sort the keys and retrieve the objects ordered
#macro(sortobjsbylastname $objects)
#set($temp = $xwiki.arrayList)
#set($objmap = $xwiki.hashMap)
#set($objkeys = $xwiki.arrayList)
#foreach($obj in $objects)
   #set($memberpage = $doc.display("member", $obj))
   #set($localname = $xwiki.getLocalUserName($memberpage, false))
   #set($indx = $localname.indexOf(" "))
   #set($indx = $indx + 1)
   #if($localname && $localname.size() > $indx)
     #set($key = $localname.substring($indx))
     #capitalize($key) ## the last name 
     #set($no = $velocityCount)
     #foreach($k in $objkeys)
        #if($key == $k)
          #set($key = $key + "${no}") ## for users with the same last name or first name
        #end
     #end
     #set($discard = $objkeys.add($key))   
     #set($discard = $objmap.put($key, $obj))
   #elseif($localname != "") ## the first name, if the last name is empty
       #capitalize($localname)
       #set($discard = $objkeys.add($localname))   
       #set($discard = $objmap.put($localname, $obj))
   #end
#end
#set($objkeys = $xwiki.sort($objkeys))  
#foreach($k in $objkeys)
   #set($discard = $temp.add($objmap.get($k)))
#end
## replace the array of objects with the sorted one
#set($objects = $temp)
#end
        
### sort by last name an array of document names representing users
#macro(sortdocnamesbylastname $docnames)
#set($temp = $xwiki.arrayList)
#set($docnamesmap = $xwiki.hashMap)
#set($docnameskeys = $xwiki.arrayList)
#foreach($docname in $docnames)
    #set($userdoc = $xwiki.getDocument($docname))
    #set($key = $userdoc.get("last_name"))
    #if($key == "")
      #set($key = $userdoc.get("first_name"))
    #end
    #if($key != "") 
      #capitalize($key)
      #set($no = $velocityCount)
      #foreach($k in $docnameskeys)
        #if($key == $k)
          #set($key = $key + "${no}") ## for users with the same last name or first name
        #end
      #end
      #set($discard = $docnameskeys.add($key))
      #set($discard = $docnamesmap.put($key, $docname))
    #end
#end
#set($docnameskeys = $xwiki.sort($docnameskeys))
#foreach($k in $docnameskeys)
   #set($discard = $temp.add($docnamesmap.get($k)))
#end
#set($docnames = $temp)
#end
  
### allow / deny allusers / allmanagers to add new users
#macro(registration $allow $groupname)
#if($allow == true)
  #set($found = false)
  #set($pdoc = $xwiki.getDocument("XWiki.XWikiPreferences"))
  #foreach($obj in $pdoc.getObjects("XWiki.XWikiGlobalRights"))
    #set($groups = "$obj.getProperty('groups').getValue()")
    #set($levels = "$obj.getProperty('levels').getValue()")
    #if($groups.matches("${groupname},?") && $levels.indexOf("register") >= 0) ## found the register right
      #set($found = true)
    #end
  #end
  #if($found == false)
    #set($robj = $pdoc.newObject("XWiki.XWikiGlobalRights"))
    #set($ret = $robj.set('levels', 'register'))
    #set($ret = $robj.set('groups', $groupname))
    #set($ret = $robj.set('allow', '1'))
    #set($ret = $pdoc.save())
  #end
#else ## $allow is false
  #set($pdoc = $xwiki.getDocument("XWiki.XWikiPreferences"))
  #foreach($obj in $pdoc.getObjects("XWiki.XWikiGlobalRights"))
    #set($groups = "$obj.getProperty('groups').getValue()")
    #set($levels = "$obj.getProperty('levels').getValue()")
    #if($groups.matches("${groupname},?") && $levels.indexOf("register") >= 0) ## found the register right
      #set($ret = $pdoc.removeObject($obj))
      #set($ret = $pdoc.save())
    #end
  #end
#end
#end
  
##-----------------------------------------##
## macro to display a notification panel 
## (deadlines, modifcations, tasks, meetings) 
##----------------------------------------##
#macro(notifspanel $type $title $rssurl)
<div class="panel expanded">
 <div class="notifspanelheader" onclick="togglePanelVisibility(this.parentNode);"><div class="notifsicon" id="notifs${type}">&nbsp;</div><h5 class="notifspaneltitle">$title</h5></div>
 <div class="notifspanelcontents">
  <div class="notifsactiontop">
   <div id="displaynr_${type}" class="displaynr hidden"><span id="nr_${type}"></span>&nbsp;$msg.get("last")</div>
   <div id="seeall_${type}" class="seeall hidden">$msg.get("seeall")</div>
   <div id="nonotifs_${type}" class="nonotifs hidden">
   #if($type == "modifications") $msg.get("nomodifs") 
    #elseif($type == "deadlines") $msg.get("nodeadlines")
    #elseif($type == "tasks") $msg.get("notasks")
    #elseif($type == "meetings") $msg.get("nomeetings") 
   #end</div>
  </div> ## actiontop
  <div id="notifscontents_${type}" class="notifscontents hidden">
    <table width="162px" id="$type">
       #set($notifsnr = 0)
       #if($type == "modifications")
         #getNotifs($type 5 "past" true) ## true means also display the notifs
       #else
         #getNotifs($type 5 "all" true)  
       #end
       <tr class="hidden"><td id="sofar_${type}">$notifsnr</td></tr>
    </table>
  </div>## notifscontents
  <div class="notifsactionbottom">
   <div id="next5_${type}" class="next5 hidden">$msg.get("next5")</div>
   <div id="prev5_${type}" class="prev5 hidden">$msg.get("prev5")</div>
   #if($type == "deadlines") <a id="notifsrss_${type}" class="notifsrss hidden" href="$rssurl" target='_blank'></a> #end
  </div> ## actionbottom
 </div> ## notifspanelcontents
</div> ## panel expanded
#end
 
##------------------------------##
## initialize a calendar object 
## based on a date object 
##------------------------------##
#macro(initCalByDate $dateobj)
    #set($year = $dateobj.getYear() + 1900)
    #set($month = $dateobj.getMonth() + 1)
    #set($day = $dateobj.getDate())
#end
 
##--------------------------------##
## checks if a date is after another
## (without taking in consideration
## the time)
##---------------------------------##
#macro(dateIsAfter $date1 $date2)
  #set($d1 = $date1.getDate())
  #set($d2 = $date2.getDate())
  #set($m1 = $date1.getMonth() + 1)
  #set($m2 = $date2.getMonth() + 1)
  #set($y1 = $date1.getYear() + 1900)
  #set($y2 = $date2.getYear() + 1900)
  #if( ($y1 == $y2 && $m1 == $m2 && $d1 > $d2) || ($y1 == $y2 && $m1 > $m2) || ($y1 > $y2) )
    #set($isAfter = true)
  #else
    #set($isAfter = false)
  #end
#end

##--------------------------------##
## get the difference in days 
## between 2 calendar objects
##--------------------------------##
#macro(getDateDiff $type $item)
    ## current calendar
    #set($cc = $xwiki.calendar.getCalendar())
    #initCalByDate($xwiki.getDate())
    #set($tmp = $cc.set($year, $month, $day))
    ## item's calendar
    #set($ci = $xwiki.calendar.getCalendar())
    ## modifications & deadlines
    #if($type == "modifications" || $type == "deadlines")
      #initCalByDate($item.getDate())
      #set($tmp = $ci.set($year, $month, $day))
      #dateIsAfter($item.getDate() $xwiki.getDate())
    ## tasks
    #elseif($type == "tasks")
        #set($tdoc = $xwiki.getDocument($item))
        #set($tobj = $tdoc.getObject("ChronoClasses.ProjectArticleClass"))
        #set($tdate = $tobj.getProperty("taskduedate").value)
        #initCalByDate($tdate)
        #set($tmp = $ci.set($year, $month, $day))
        #dateIsAfter($tdate $xwiki.getDate())
    #elseif($type == "meetings")
        #set($mdoc = $xwiki.getDocument($item))
        #set($mobj = $mdoc.getObject("ChronoClasses.ProjectArticleClass"))
        #set($mdate = $mobj.getProperty("meetingend").value)
        #initCalByDate($mdate)
        #set($tmp = $ci.set($year, $month, $day))
        #dateIsAfter($mdate $xwiki.getDate())
    #end
    #set($diff = $xwiki.chronopolys.getDaysBetween($cc, $ci))
#end

##-------------------------------------##
## get notifications from the future
## (deadlines, tasks, meetings)
##-------------------------------------##
#macro(getNotifs $type $limit $when $displ)
 #if($type == "deadlines")
   #if($limit > 0) #set($items = $xwiki.chronopolys.getMyNextDeadlines($limit))
   #else #set($items = $xwiki.chronopolys.getMyNextDeadlines()) #end
 #elseif($type == "modifications")
   #if($limit > 0) #set($items = $xwiki.chronopolys.getMyLastModifications($limit))
   #else #set($items = $xwiki.chronopolys.getMyLastModifications()) #end
 #elseif($type == "tasks")
   #if($limit > 0) #set($items = $xwiki.chronopolys.getMyTasks($limit, 0))
   #else #set($items = $xwiki.chronopolys.getMyTasks()) #end
 #elseif($type == "meetings")
   #if($limit > 0) #set($items = $xwiki.chronopolys.getMyMeetings($limit, 0))    
   #else #set($items = $xwiki.chronopolys.getMyMeetings()) #end
 #end
   
 #initCalByDate($xwiki.getDate())
 #set($tmp = $cc.set($year,$month,$day))
 #set($febr = 28)
 #if ($cc.isLeapYear($now.getYear())) #set($febr = 29)  #end
 #set($ndays = [31,$febr,31,30,31,30,31,31,30,31,30,31])
 #set($month = $xwiki.getDate().getMonth())
 #set($mlength = $ndays.get($month))
 #set($mlength2 = 2 * $mlength)
 #set($mlength3 = 3 * $mlength)
 #set($limits = [0, 1, 2, 7, 14, $mlength, $mlength2, $mlength3, 9000]) ## 9000 days =  max limit of the future/older notifs
 #set($limitNamesPast = [$msg.get("today"),$msg.get("yesterday"),$msg.get("since2d"),$msg.get("since1w"),$msg.get("since2w"),$msg.get("since1m"),$msg.get("since2m"),$msg.get("since3m"),$msg.get("older")])
 #set($limitNamesFuture = [$msg.get("today"),$msg.get("tomorrow"),$msg.get("within2d"),$msg.get("within1w"),$msg.get("within2w"),$msg.get("within1m"),$msg.get("within2m"),$msg.get("within3m"),$msg.get("future")])
 #set($oldLimit = -1)
 #set($match = -1)
 #set($wasBefore = true)
 
 #foreach($item in $items)
   #getDateDiff($type $item)
   #if( ($when == "past" && $isAfter == false) || ($when == "future" && $isAfter) || ($when == "all")) 
     #if($isAfter) 
       #set($limitNames = $limitNamesFuture)
       #if($wasBefore)
         #set($oldLimit = -1)
         #set($wasBefore = false)
         #set($match = -1)
       #end
     #else  #set($limitNames = $limitNamesPast) #set($diff = (-1) * $diff) #end
     #foreach($limit in $limits)
      #if($diff > $oldLimit && $diff <= $limit)
        #set($newMatch = $velocityCount - 1)
        #if ($newMatch != $match)
          ## display the classification header
          #if($displ == true) <tr><td class="notifsdate" colspan="2">$limitNames.get($newMatch)</td></tr> #end
          #set($match = $newMatch)
        #end ## end if
        #set($oldLimit = $limit)
       #end ## end if
     #end ## end foreach
     #if($displ == true) 
       #displayNotif($type $item)
       #set($notifsnr = $notifsnr + 1)
     #else
       #set($notifstotal = $notifstotal + 1)
     #end
   #end
 #end ## end foreach
#end ## end macro
  
##-------------------------------##
## macro to display a notification
##-------------------------------##
#macro(displayNotif $type $item)
  #set($border-color = "#E6E6E6")

  #if($type == "modifications")
    #set ($cdoc = $xwiki.getDocument($item.getPage()))
    #set ($cdate = $xwiki.formatDate($item.getDate(), "dd/MM/yyyy, HH:mm"))
    #set ($pdoc = $xwiki.getDocument("${cdoc.space}.WebHome"))
    #set ($dname = $msg.get($item.getName()))
    #set ($tmp = ["WebHome","ProjectMembers","ProjectGuests","ProjectLeaders","ProjectPhases","ProjectNote","ProjectWiki","ProjectDocuments","Task","Meeting","Page","Plog"])
    #set ($icons = ["WebHome.png","ProjectMembers.png","ProjectGuests.png","ProjectLeaders.png","ProjectPhases.png","ProjectNote.png","ProjectWiki.png","ProjectDocuments.png",
    "ProjectTask.png","ProjectMeeting.png","ProjectWiki.png","ProjectWiki.png"])
    #set($img = $xwiki.getSkinFile("ProjectWiki.png")) ## default icon
    #foreach($i in $tmp)
      #if($item.getName().indexOf($i) >= 0)
        #set($j = $velocityCount - 1)
        #set($img = $xwiki.getSkinFile($icons.get($j)))
      #end
    #end
    #set ($backcolor = $xwiki.chronopolys.getProjectContainerStyle($pdoc.display("container", "view")))
    <tr>
      <td class="leftpanelcolumnimg" style="background-color:$backcolor;background-image:url($img);background-position:center center;_background-image:url();
      _filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${img}', sizingMethod='image');border-color:$border-color;"></td>
      <td style="padding-left:3px;"><a href="$xwiki.getURL($cdoc.fullName)" title="$cdate"><strong>$msg.get($item.getName())</strong> ($pdoc.display("name", "view"))</a></td>
    </tr>
  #elseif($type == "deadlines")
    #set($cdate = $xwiki.formatDate($item.getDate(), "dd/MM/yyyy"))
    #set($pdoc = $xwiki.getDocument("${xwiki.getDocument($item.getPage()).getSpace()}.WebHome"))
    #set($dtype = $item.getType()) 
    #set($types = ["phase", "milestone", "task", "meeting"])
    #set($pos   = ["center center", "center center", "bottom right", "bottom right"])
    #set($img = $xwiki.getSkinFile("${types.get($dtype)}_icon.png"))
    #set($bpos = $pos.get($dtype))
    #set($backcolor = $xwiki.chronopolys.getProjectContainerStyle($pdoc.display("container", "view")))
    #if($dtype == 2)
       #set($tdoc=$xwiki.getDocument($item.getPage()))
       #set($tobj=$tdoc.getObject("ChronoClasses.ProjectArticleClass"))
       #set($tcompl=$tobj.display('taskcompletion', 'view'))
       ## TO DO: show completed tasks
    #end
    <tr>
      <td class="leftpanelcolumnimg" style="background-image:url($img);background-position:$bpos;background-color:$backcolor;_background-image:url();
      _filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${img}',sizingMethod='image');border-color:$border-color;"></td>
      <td style="padding-left:3px;">
        <a href="$xwiki.getURL($item.getPage())" title="$msg.get("deadline$item.getType()") $cdate #if($dtype==2) - $tcompl #end"><strong>$msg.get($item.getName())</strong> ($pdoc.display("name", "view"))</a>
      </td>
    </tr>  
  #elseif($type == "tasks")
    #set($tdoc=$xwiki.getDocument($item))
    #set($tobj=$tdoc.getObject("ChronoClasses.ProjectArticleClass"))
    #set($pobj=$xwiki.getDocument("${tdoc.web}.WebHome").getObject("ChronoClasses.ProjectClass"))
    #set ($color = $xwiki.chronopolys.getProjectContainerStyle($pobj.display("container", "view")))
    <tr>
      <td class="leftpanelcolumn" style="border-color:$border-color;">
        <script type="text/javascript">
          todayDiff("$xwiki.chronopolys.getListTool().get($tobj.display("taskduedate", "view").split(" "), 0)", "$color");
        </script>
      </td>
      <td style="padding-left:3px;">
        <a href="$xwiki.getURL($item)" title="$tobj.display("taskcompletion", 'view')">$tdoc.displayTitle</a>
      </td>
    </tr>
  #elseif($type == "meetings")
    #set ($mdoc=$xwiki.getDocument($item))
    #set ($mobj=$mdoc.getObject("ChronoClasses.ProjectArticleClass"))
    #set ($pobj=$xwiki.getDocument("${mdoc.web}.WebHome").getObject("ChronoClasses.ProjectClass"))
    #set ($color = $xwiki.chronopolys.getProjectContainerStyle($pobj.display("container", "view")))
    <tr>
      <td class="leftpanelcolumn" style="padding:0;border-color:$border-color;">
        <script type="text/javascript">
          todayDiff("$xwiki.chronopolys.getListTool().get($mobj.display("meetingstart", "view").split(" "), 0)", "$color");
        </script>
      </td>
      <td style="padding-left:3px;">
        <a href="$xwiki.getURL($item)">$mdoc.displayTitle</a>
      </td>
    </tr>  
  #end
#end